public class Gameover/Victory {
    private int playerHP;
    private int enemiesDefeated;
    private int timeSpent; // in seconds
    private String difficulty;
    private int bonusItemsCollected;
    private boolean dungeonCompleted;

    public RPGGame(String difficulty) {
        this.playerHP = 100;
        this.enemiesDefeated = 0;
        this.timeSpent = 0;
        this.difficulty = difficulty;
        this.bonusItemsCollected = 0;
        this.dungeonCompleted = false;
    }

    private int calculateScore() {
        // Base score factors
        double difficultyMultiplier;
        switch (difficulty.toLowerCase()) {
            case "easy":
                difficultyMultiplier = 1.0;
                break;
            case "hard":
                difficultyMultiplier = 2.0;
                break;
            default:
                difficultyMultiplier = 1.5;
                break;
        }

        int baseScore = (enemiesDefeated * 100) + (bonusItemsCollected * 50);

        // Time penalty: faster completion is better
        int timePenalty = Math.max(0, 5000 - timeSpent);

        // Final score calculation
        return (int) ((baseScore + timePenalty) * difficultyMultiplier);
    }

    public void gameOver() {
        System.out.println("\n=== GAME OVER ===");
        System.out.println("You fought valiantly, but your journey ends here.");
        System.out.println("Better luck next time!");
    }

    public void victory() {
        int score = calculateScore();
        System.out.println("\n=== VICTORY ===");
        System.out.println("Congratulations! You've completed the dungeon.");
        System.out.println("Enemies defeated: " + enemiesDefeated);
        System.out.println("Bonus items collected: " + bonusItemsCollected);
        System.out.println("Time spent: " + (timeSpent / 60) + " minutes " + (timeSpent % 60) + " seconds");
        System.out.println("Final Score: " + score);
    }

    public void updateTime(int seconds) {
        timeSpent += seconds;
    }

    public void playerTakesDamage(int damage) {
        playerHP -= damage;
        if (playerHP <= 0) {
            playerHP = 0;
            gameOver();
        }
    }

    public void defeatEnemy() {
        enemiesDefeated++;
    }

    public void collectBonusItem() {
        bonusItemsCollected++;
    }

    public void completeDungeon() {
        dungeonCompleted = true;
        victory();
    }

    // Main method for testing
    public static void main(String[] args) {
        RPGGame game = new RPGGame("hard");

        // Simulating gameplay
        game.updateTime(300); // 5 minutes
        game.defeatEnemy();
        game.defeatEnemy();
        game.collectBonusItem();
        game.updateTime(120); // 2 more minutes

        // Simulate reaching the end or dying
        if (game.dungeonCompleted) {
            game.completeDungeon();
        } else {
            game.playerTakesDamage(150); // Simulate taking lethal damage
        }
    }
}

