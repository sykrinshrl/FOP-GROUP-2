// Represents an individual item in the game
public class Item {
    private String name;
    private String effect;

    // Constructor
    public Item(String name, String effect) {
        this.name = name;
        this.effect = effect;
    }

    // Getters
    public String getName() {
        return name;
    }

    public String getEffect() {
        return effect;
    }

    // Display item details
    @Override
    public String toString() {
        return "Item: " + name + ", Effect: " + effect;
    }
}

// Manages the player's inventory
public class Inventory {
    private Item[] items;
    private int itemCount;

    // Constructor
    public Inventory(int size) {
        items = new Item[size];
        itemCount = 0;
    }

    // Add an item to the inventory
    public boolean addItem(Item item) {
        if (itemCount < items.length) {
            items[itemCount] = item;
            itemCount++;
            System.out.println(item.getName() + " added to inventory.");
            return true;
        } else {
            System.out.println("Inventory is full. Cannot add " + item.getName() + ".");
            return false;
        }
    }

    // Remove an item from the inventory
    public boolean removeItem(String itemName) {
        for (int i = 0; i < itemCount; i++) {
            if (items[i].getName().equalsIgnoreCase(itemName)) {
                System.out.println(items[i].getName() + " removed from inventory.");
                // Shift items to fill the gap
                for (int j = i; j < itemCount - 1; j++) {
                    items[j] = items[j + 1];
                }
                items[itemCount - 1] = null;
                itemCount--;
                return true;
            }
        }
        System.out.println("Item not found in inventory: " + itemName);
        return false;
    }

    // Display all items in the inventory
    public void displayInventory() {
        System.out.println("Inventory:");
        if (itemCount == 0) {
            System.out.println("[Empty]");
        } else {
            for (int i = 0; i < itemCount; i++) {
                System.out.println((i + 1) + ". " + items[i]);
            }
        }
    }
}
